go_ids <- unique(go_data_frame$ID)
go_terms <-
str_replace_all(unique(go_data_frame$Term), ":", "")
go_db <- unique(go_data_frame$GO_DB)
gene_data_frame <-
lapply(go_ids, function(i) {
getBM(
attributes = c('hgnc_symbol', 'ensembl_transcript_id', 'go_id'),
filters = 'go',
values = i,
mart = ensembl
)
})
dir.create(paste0("data/geneLists/finalGeneLists/", go_db),
showWarnings = FALSE,
recursive = TRUE)
for (gene_data_frame_number in seq(length(gene_data_frame))) {
temp_gene_data_frame <- gene_data_frame[[gene_data_frame_number]]
temp_gene_data_frame <-
temp_gene_data_frame[temp_gene_data_frame$go_id == go_ids[gene_data_frame_number],]
write.csv(
temp_gene_data_frame,
paste0("data/geneLists/finalGeneLists/", go_db, "/", go_terms[gene_data_frame_number], ".csv"),
row.names = FALSE
)
}
message(go_db)
}
library(biomaRt)
dir.create("data/geneLists/finalGeneLists",
showWarnings = FALSE,
recursive = TRUE)
file_path <- "data/geneLists/filteredEnrichmentResults"
go_file_names <-
list.files(
path = file_path,
pattern = "GO_",
all.files = FALSE,
full.names = FALSE
)
for (go_file_name in go_file_names) {
go_file_paths <- paste0(file_path, "/", go_file_name)
go_data_frame <- read.csv(go_file_paths, header = TRUE)
go_data_frame$GO_DB <-
str_replace(go_file_name, ".csv", "")
ensembl <-
useMart("ensembl", dataset = "hsapiens_gene_ensembl") #uses human ensembl annotations
go_ids <- unique(go_data_frame$ID)
go_terms <-
str_replace_all(unique(go_data_frame$Term), ":", "")
go_db <- unique(go_data_frame$GO_DB)
gene_data_frame <-
lapply(go_ids, function(i) {
getBM(
attributes = c('hgnc_symbol', 'ensembl_transcript_id', 'go_id'),
filters = 'go',
values = i,
mart = ensembl
)
})
dir.create(paste0("data/geneLists/finalGeneLists/", go_db),
showWarnings = FALSE,
recursive = TRUE)
for (gene_data_frame_number in seq(length(gene_data_frame))) {
temp_gene_data_frame <- gene_data_frame[[gene_data_frame_number]]
temp_gene_data_frame <-
temp_gene_data_frame[temp_gene_data_frame$go_id == go_ids[gene_data_frame_number],]
write.csv(
temp_gene_data_frame,
paste0("data/geneLists/finalGeneLists/", go_db, "/", go_terms[gene_data_frame_number], ".csv"),
row.names = FALSE
)
}
message(go_db)
}
library(biomaRt)
dir.create("data/geneLists/finalGeneLists",
showWarnings = FALSE,
recursive = TRUE)
file_path <- "data/geneLists/filteredEnrichmentResults"
go_file_names <-
list.files(
path = file_path,
pattern = "GO_",
all.files = FALSE,
full.names = FALSE
)
for (go_file_name in go_file_names) {
go_file_paths <- paste0(file_path, "/", go_file_name)
go_data_frame <- read.csv(go_file_paths, header = TRUE)
go_data_frame$GO_DB <-
str_replace(go_file_name, ".csv", "")
ensembl <-
useMart("ensembl", dataset = "hsapiens_gene_ensembl") #uses human ensembl annotations
go_ids <- unique(go_data_frame$ID)
go_terms <-
str_replace_all(unique(go_data_frame$Term), ":", "")
go_db <- unique(go_data_frame$GO_DB)
gene_data_frame <-
lapply(go_ids, function(i) {
getBM(
attributes = c('hgnc_symbol'),
filters = 'go',
values = i,
mart = ensembl
)
})
dir.create(paste0("data/geneLists/finalGeneLists/", go_db),
showWarnings = FALSE,
recursive = TRUE)
for (gene_data_frame_number in seq(length(gene_data_frame))) {
temp_gene_data_frame <- gene_data_frame[[gene_data_frame_number]]
write.csv(
temp_gene_data_frame,
paste0("data/geneLists/finalGeneLists/", go_db, "/", go_terms[gene_data_frame_number], ".csv"),
row.names = FALSE
)
}
message(go_db)
}
go_terms
go_terms <-
str_replace_all(unique(go_data_frame$Term), ":", "") %>% str_replace_all("[[:punct:]]", " ")
go_terms
go_terms <-
str_replace_all(unique(go_data_frame$Term), ":", "") %>% str_replace_all("[[:punct:]]", "")
go_terms
go_terms <-
str_replace_all(unique(go_data_frame$Term), "[[:punct:]]", "")
go_terms
library(biomaRt)
dir.create("data/geneLists/finalGeneLists",
showWarnings = FALSE,
recursive = TRUE)
file_path <- "data/geneLists/filteredEnrichmentResults"
go_file_names <-
list.files(
path = file_path,
pattern = "GO_",
all.files = FALSE,
full.names = FALSE
)
for (go_file_name in go_file_names) {
go_file_paths <- paste0(file_path, "/", go_file_name)
go_data_frame <- read.csv(go_file_paths, header = TRUE)
go_data_frame$GO_DB <-
str_replace(go_file_name, ".csv", "")
ensembl <-
useMart("ensembl", dataset = "hsapiens_gene_ensembl") #uses human ensembl annotations
go_ids <- unique(go_data_frame$ID)
go_terms <-
str_replace_all(unique(go_data_frame$Term), "[[:punct:]]", "")
go_db <- unique(go_data_frame$GO_DB)
gene_data_frame <-
lapply(go_ids, function(i) {
getBM(
attributes = c('hgnc_symbol'),
filters = 'go',
values = i,
mart = ensembl
)
})
dir.create(paste0("data/geneLists/finalGeneLists/", go_db),
showWarnings = FALSE,
recursive = TRUE)
for (gene_data_frame_number in seq(length(gene_data_frame))) {
temp_gene_data_frame <- gene_data_frame[[gene_data_frame_number]]
write.csv(
temp_gene_data_frame,
paste0("data/geneLists/finalGeneLists/", go_db, "/", go_terms[gene_data_frame_number], ".csv"),
row.names = FALSE
)
}
message(go_db)
}
library(biomaRt)
dir.create("data/geneLists/finalGeneLists",
showWarnings = FALSE,
recursive = TRUE)
file_path <- "data/geneLists/filteredEnrichmentResults"
go_file_names <-
list.files(
path = file_path,
pattern = "GO_",
all.files = FALSE,
full.names = FALSE
)
for (go_file_name in go_file_names) {
go_file_paths <- paste0(file_path, "/", go_file_name)
go_data_frame <- read.csv(go_file_paths, header = TRUE)
go_data_frame$GO_DB <-
str_replace(go_file_name, ".csv", "")
ensembl <-
useMart("ensembl", dataset = "hsapiens_gene_ensembl") #uses human ensembl annotations
go_ids <- unique(go_data_frame$ID)
go_terms <-
str_replace_all(unique(go_data_frame$Term), "[[:punct:]]", "")
go_db <- unique(go_data_frame$GO_DB)
gene_data_frame <-
lapply(go_ids, function(i) {
getBM(
attributes = c('hgnc_symbol'),
filters = 'go',
values = i,
mart = ensembl
)
})
dir.create(paste0("data/geneLists/finalGeneLists/", go_db),
showWarnings = FALSE,
recursive = TRUE)
for (gene_data_frame_number in seq(length(gene_data_frame))) {
temp_gene_data_frame <- gene_data_frame[[gene_data_frame_number]]
write.csv(
temp_gene_data_frame,
paste0("data/geneLists/finalGeneLists/", go_db, "/", go_terms[gene_data_frame_number], ".csv"),
row.names = FALSE
)
}
message(go_db)
}
x <- listFilters(ensembl)
View(x)
library(biomaRt)
dir.create("data/geneLists/finalGeneLists",
showWarnings = FALSE,
recursive = TRUE)
file_path <- "data/geneLists/filteredEnrichmentResults"
go_file_names <-
list.files(
path = file_path,
pattern = "GO_",
all.files = FALSE,
full.names = FALSE
)
for (go_file_name in go_file_names) {
go_file_paths <- paste0(file_path, "/", go_file_name)
go_data_frame <- read.csv(go_file_paths, header = TRUE)
go_data_frame$GO_DB <-
str_replace(go_file_name, ".csv", "")
ensembl <-
useMart("ensembl", dataset = "hsapiens_gene_ensembl") #uses human ensembl annotations
go_ids <- unique(go_data_frame$ID)
go_terms <-
str_replace_all(unique(go_data_frame$Term), "[[:punct:]]", "")
go_db <- unique(go_data_frame$GO_DB)
gene_data_frame <-
lapply(go_ids, function(i) {
getBM(
attributes = c('hgnc_symbol'),
# filters = 'go',
filters = "go_parent_term",
uniqueRows = TRUE,
values = i,
mart = ensembl
)
})
dir.create(paste0("data/geneLists/finalGeneLists/", go_db),
showWarnings = FALSE,
recursive = TRUE)
for (gene_data_frame_number in seq(length(gene_data_frame))) {
temp_gene_data_frame <- gene_data_frame[[gene_data_frame_number]]
write.csv(
temp_gene_data_frame,
paste0("data/geneLists/finalGeneLists/", go_db, "/", go_terms[gene_data_frame_number], ".csv"),
row.names = FALSE
)
}
message(go_db)
}
library(biomaRt)
dir.create("data/geneLists/finalGeneLists",
showWarnings = FALSE,
recursive = TRUE)
file_path <- "data/geneLists/filteredEnrichmentResults"
go_file_names <-
list.files(
path = file_path,
pattern = "GO_",
all.files = FALSE,
full.names = FALSE
)
for (go_file_name in go_file_names) {
go_file_paths <- paste0(file_path, "/", go_file_name)
go_data_frame <- read.csv(go_file_paths, header = TRUE)
go_data_frame$GO_DB <-
str_replace(go_file_name, ".csv", "")
ensembl <-
useMart("ensembl", dataset = "hsapiens_gene_ensembl") #uses human ensembl annotations
go_ids <- unique(go_data_frame$ID)
go_terms <-
str_replace_all(unique(go_data_frame$Term), "[[:punct:]]", "")
go_db <- unique(go_data_frame$GO_DB)
gene_data_frame <-
lapply(go_ids, function(i) {
getBM(
attributes = c('hgnc_symbol'),
# filters = 'go',
filters = "go_parent_term",
uniqueRows = TRUE,
values = i,
mart = ensembl
)
})
dir.create(paste0("data/geneLists/finalGeneLists/", go_db),
showWarnings = FALSE,
recursive = TRUE)
for (gene_data_frame_number in seq(length(gene_data_frame))) {
temp_gene_data_frame <- gene_data_frame[[gene_data_frame_number]]
write.csv(
temp_gene_data_frame,
paste0("data/geneLists/finalGeneLists/", go_db, "/", go_terms[gene_data_frame_number], ".csv"),
row.names = FALSE
)
}
message(go_db)
}
library(data.table)
disease_associations <-
fread("data\geneLists\alsGwasList\MONDO_0004976_associations_export.tsv") %>%
library(data.table)
disease_associations <-
fread("data/geneLists/alsGwasList/MONDO_0004976_associations_export.tsv") %>%
as.data.frame()
library(data.table)
library(tidyverse)
disease_associations <-
fread("data/geneLists/alsGwasList/MONDO_0004976_associations_export.tsv") %>%
as.data.frame()
head(disease_associations)
library(data.table)
library(tidyverse)
library(dplyr)
disease_associated_gens <-
fread("data/geneLists/alsGwasList/MONDO_0004976_associations_export.tsv") %>%
as.data.frame() %>%
dplyr::select(mappedGenes)
head(disease_associated_gens)
disease_associated_gens <-
fread("data/geneLists/alsGwasList/MONDO_0004976_associations_export.tsv") %>%
as.data.frame() %>%
dplyr::select(mappedGenes) %>%
distinct()
disease_associated_genes <-
fread("data/geneLists/alsGwasList/MONDO_0004976_associations_export.tsv") %>%
as.data.frame() %>%
dplyr::select(mappedGenes)
length(disease_associated_genes)
head(disease_associated_genes)
disease_associated_genes <-
fread("data/geneLists/alsGwasList/MONDO_0004976_associations_export.tsv") %>%
as.data.frame() %>%
dplyr::select(mappedGenes)
disease_associated_genes
nrow(disease_associated_genes)
disease_associated_genes <-
fread("data/geneLists/alsGwasList/MONDO_0004976_associations_export.tsv") %>%
as.data.frame() %>%
dplyr::select(mappedGenes) %>%
distinct()
nrow(disease_associated_genes)
View(disease_associated_genes)
library(data.table)
library(tidyverse)
library(dplyr)
disease_associated_genes <-
fread("data/geneLists/alsGwasList/MONDO_0004976_associations_export.tsv") %>%
as.data.frame() %>%
dplyr::select(mappedGenes) %>%
distinct()
nrow(disease_associated_genes)
library(data.table)
library(tidyverse)
library(dplyr)
disease_associated_genes <-
fread("data/geneLists/alsGwasList/MONDO_0004976_associations_export.tsv") %>%
as.data.frame() %>%
dplyr::select(mappedGenes) %>%
distinct()
nrow(disease_associated_genes)
View(disease_associated_genes)
library(data.table)
library(tidyverse)
library(dplyr)
disease_associated_genes <-
fread("data/geneLists/alsGwasList/MONDO_0004976_associations_export.tsv") %>%
as.data.frame() %>%
dplyr::select(mappedGenes) %>%
distinct() %>%
mutate(mappedGenesTwo = str_split(mappedGenes, "\\(", simplify = T)[, 2])
library(data.table)
library(tidyverse)
library(dplyr)
disease_associated_genes <-
fread("data/geneLists/alsGwasList/MONDO_0004976_associations_export.tsv") %>%
as.data.frame() %>%
dplyr::select(mappedGenes) %>%
distinct() %>%
mutate(mappedGenesTwo = str_split(mappedGenes, ",", simplify = T)[, 2])
View(disease_associated_genes)
library(data.table)
library(tidyverse)
library(dplyr)
disease_associated_genes <-
fread("data/geneLists/alsGwasList/MONDO_0004976_associations_export.tsv") %>%
as.data.frame() %>%
dplyr::select(mappedGenes) %>%
distinct() %>%
mutate(mappedGenesOne = str_split(mappedGenes, ",", simplify = T)[, 1],
mappedGenesTwo = str_split(mappedGenes, ",", simplify = T)[, 2])
disease_associated_genes <-
fread("data/geneLists/alsGwasList/MONDO_0004976_associations_export.tsv") %>%
as.data.frame() %>%
dplyr::select(mappedGenes) %>%
distinct() %>%
mutate(mappedGenesOne = str_split(mappedGenes, ",", simplify = T)[, 1],
mappedGenesTwo = str_split(mappedGenes, ",", simplify = T)[, 2],
mappedGenesThree = str_split(mappedGenes, ";", simplify = T)[, 1])
library(data.table)
library(tidyverse)
library(dplyr)
disease_associated_genes <-
fread("data/geneLists/alsGwasList/MONDO_0004976_associations_export.tsv") %>%
as.data.frame() %>%
dplyr::select(mappedGenes) %>%
distinct() %>%
mutate(mappedGenesOne = str_split(mappedGenes, ",", simplify = T)[, 1],
mappedGenesTwo = str_split(mappedGenes, ",", simplify = T)[, 2],
mappedGenesOne = str_split(mappedGenes, ";", simplify = T)[, 1])
library(data.table)
library(tidyverse)
library(dplyr)
disease_associated_genes <-
fread("data/geneLists/alsGwasList/MONDO_0004976_associations_export.tsv") %>%
as.data.frame() %>%
dplyr::select(mappedGenes) %>%
distinct() %>%
mutate(mappedGenesOne = str_split(mappedGenes, ",", simplify = T)[, 1],
mappedGenesTwo = str_split(mappedGenes, ",", simplify = T)[, 2],
mappedGenesThree = str_split(mappedGenesOne, ";", simplify = T)[, 1])
library(data.table)
library(tidyverse)
library(dplyr)
disease_associated_genes <-
fread("data/geneLists/alsGwasList/MONDO_0004976_associations_export.tsv") %>%
as.data.frame() %>%
dplyr::select(mappedGenes) %>%
distinct() %>%
mutate(mappedGenesOne = str_split(mappedGenes, ",", simplify = T)[, 1],
mappedGenesTwo = str_split(mappedGenes, ",", simplify = T)[, 2],
mappedGenesThree = str_split(mappedGenesOne, ";", simplify = T)[, 1]) %>%
dplyr::select(mappedGenesThree, mappedGenesTwo)
library(data.table)
library(tidyverse)
library(dplyr)
disease_associated_genes <-
fread("data/geneLists/alsGwasList/MONDO_0004976_associations_export.tsv") %>%
as.data.frame() %>%
dplyr::select(mappedGenes) %>%
distinct() %>%
mutate(mappedGenesOne = str_split(mappedGenes, ",", simplify = T)[, 1],
mappedGenesTwo = str_split(mappedGenes, ",", simplify = T)[, 2],
mappedGenesThree = str_split(mappedGenesOne, ";", simplify = T)[, 1]) %>%
dplyr::select(mappedGenesThree, mappedGenesTwo) %>%
unlist()
library(data.table)
library(tidyverse)
library(dplyr)
disease_associated_genes <-
fread("data/geneLists/alsGwasList/MONDO_0004976_associations_export.tsv") %>%
as.data.frame() %>%
dplyr::select(mappedGenes) %>%
distinct() %>%
mutate(mappedGenesOne = str_split(mappedGenes, ",", simplify = T)[, 1],
mappedGenesTwo = str_split(mappedGenes, ",", simplify = T)[, 2],
mappedGenesThree = str_split(mappedGenesOne, ";", simplify = T)[, 1]) %>%
dplyr::select(mappedGenesThree, mappedGenesTwo) %>%
unlist() %>%
distinct()
library(data.table)
library(tidyverse)
library(dplyr)
disease_associated_genes <-
fread("data/geneLists/alsGwasList/MONDO_0004976_associations_export.tsv") %>%
as.data.frame() %>%
dplyr::select(mappedGenes) %>%
distinct() %>%
mutate(mappedGenesOne = str_split(mappedGenes, ",", simplify = T)[, 1],
mappedGenesTwo = str_split(mappedGenes, ",", simplify = T)[, 2],
mappedGenesThree = str_split(mappedGenesOne, ";", simplify = T)[, 1]) %>%
dplyr::select(mappedGenesThree, mappedGenesTwo) %>%
unlist() %>%
as.data.frame() %>%
distinct()
library(data.table)
library(tidyverse)
library(dplyr)
disease_associated_genes <-
fread("data/geneLists/alsGwasList/MONDO_0004976_associations_export.tsv") %>%
as.data.frame() %>%
dplyr::select(mappedGenes) %>%
distinct() %>%
mutate(mappedGenesOne = str_split(mappedGenes, ",", simplify = T)[, 1],
mappedGenesTwo = str_split(mappedGenes, ",", simplify = T)[, 2],
mappedGenesThree = str_split(mappedGenesOne, ";", simplify = T)[, 1]) %>%
dplyr::select(mappedGenesThree, mappedGenesTwo) %>%
unlist() %>%
as.data.frame() %>%
distinct() %>%
as.list()
View(disease_associated_genes)
write.csv(disease_associated_genes, "data/geneLists/alsGwasList/finalGenes.csv")
write.csv(disease_associated_genes, "data/geneLists/alsGwasList/finalGenes.csv", row.names = FALSE)

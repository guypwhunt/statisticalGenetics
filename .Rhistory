#   )
# ) %>%
dplyr::select(mappedGenes) %>%
unique() %>%
na.omit() %>%
as.list() %>%
unname() %>%
unlist() %>%
str_split(",") %>%
unlist() %>%
str_split(";") %>%
unlist() %>%
unique() %>%
trimws()
disease_associated_genes2 <-
paste0(
input_file_path,
"gwas-association-downloaded_2023-08-02-EFO_0001357_sporadic.tsv"
) %>%
fread() %>%
as.data.frame() %>%
filter(`P-VALUE` < 5 * 10 ^ -8) %>%
#filter(`MAPPED_TRAIT` == "sporadic amyotrophic lateral sclerosis") %>%
dplyr::select("REPORTED GENE(S)") %>%
unique() %>%
na.omit() %>%
as.list() %>%
unname() %>%
unlist() %>%
str_split(",") %>%
unlist() %>%
str_split(";") %>%
unlist() %>%
unique() %>%
trimws()
disease_associated_genes <-
append(disease_associated_genes, disease_associated_genes2) %>% unique()
disease_associated_genes <- getBM(
attributes = c('hgnc_symbol'),
filters = 'hgnc_symbol',
values = disease_associated_genes,
mart = ensembl
) %>%
as.list() %>%
unlist() %>%
unique()
length(disease_associated_genes)
dir.create(output_file_path,
showWarnings = FALSE)
write.csv(
disease_associated_genes,
paste0(output_file_path, "gwasCatalogueGenes.csv"),
row.names = FALSE
)
original_disease_gene_list <-
read.csv("data/01_geneLists/01_knownDiseaseRelatedGenes/combinedGeneList.csv") %>%
as.list() %>%
unlist() %>%
unname()
combined_disease_gene_list <- original_disease_gene_list %>%
append(disease_associated_genes) %>%
unique()
write.csv(
#combined_disease_gene_list,
c(),
paste0(output_file_path, "gwasCataloguePlusOrginalGenes.csv"),
row.names = FALSE
)
combined_gene_list <- list(original = original_disease_gene_list,
gwas = disease_associated_genes)
ggvenn(combined_gene_list,
set_name_size = 12,
text_size = 12)
library(data.table)
library(tidyverse)
library(dplyr)
library(biomaRt)
library(ggvenn)
input_file_path <-
"data/01_geneLists/07_diseaseGwasResults/gwasCatalogue/"
output_file_path <-
"data/01_geneLists/07_diseaseGwasResults/genesToRemove/"
ensembl <-
useEnsembl(biomart = "genes", dataset = "hsapiens_gene_ensembl")
# disease_associated_genes <-
#   c(
#     "MOBP",
#     "NEK1",
#     "TNIP1",
#     "ERGIC1",
#     "HLA-DQB1",
#     "PTPRN2",
#     "C9orf72",
#     "TBK1",
#     "KIF5A",
#     "COG3",
#     "SCFD1",
#     "SLC9A8",
#     "CFAP410",
#     "SOD1",
#     "UNC13A"
#   )
disease_associated_genes <-
paste0(input_file_path,
"MONDO_0004976_associations_export_als.tsv") %>%
fread() %>%
as.data.frame() %>%
filter(pValue < 5 * 10 ^ -8) %>%
# filter(
#   traitName %in% c(
#     "Amyotrophic lateral sclerosis",
#     "Amyotrophic lateral sclerosis (sporadic)"
#   )
# ) %>%
dplyr::select(mappedGenes) %>%
unique() %>%
na.omit() %>%
as.list() %>%
unname() %>%
unlist() %>%
str_split(",") %>%
unlist() %>%
str_split(";") %>%
unlist() %>%
unique() %>%
trimws()
disease_associated_genes2 <-
paste0(
input_file_path,
"gwas-association-downloaded_2023-08-02-EFO_0001357_sporadic.tsv"
) %>%
fread() %>%
as.data.frame() %>%
filter(`P-VALUE` < 5 * 10 ^ -8) %>%
#filter(`MAPPED_TRAIT` == "sporadic amyotrophic lateral sclerosis") %>%
dplyr::select("REPORTED GENE(S)") %>%
unique() %>%
na.omit() %>%
as.list() %>%
unname() %>%
unlist() %>%
str_split(",") %>%
unlist() %>%
str_split(";") %>%
unlist() %>%
unique() %>%
trimws()
disease_associated_genes <-
append(disease_associated_genes, disease_associated_genes2) %>% unique()
disease_associated_genes <- getBM(
attributes = c('hgnc_symbol'),
filters = 'hgnc_symbol',
values = disease_associated_genes,
mart = ensembl
) %>%
as.list() %>%
unlist() %>%
unique()
length(disease_associated_genes)
dir.create(output_file_path,
showWarnings = FALSE)
write.csv(
disease_associated_genes,
paste0(output_file_path, "gwasCatalogueGenes.csv"),
row.names = FALSE
)
original_disease_gene_list <-
read.csv("data/01_geneLists/01_knownDiseaseRelatedGenes/combinedGeneList.csv") %>%
as.list() %>%
unlist() %>%
unname()
combined_disease_gene_list <- original_disease_gene_list %>%
append(disease_associated_genes) %>%
unique()
write.csv(
combined_disease_gene_list,
paste0(output_file_path, "gwasCataloguePlusOrginalGenes.csv"),
row.names = FALSE
)
combined_gene_list <- list(original = original_disease_gene_list,
gwas = disease_associated_genes)
ggvenn(combined_gene_list,
set_name_size = 12,
text_size = 12)
library(data.table)
library(biomaRt)
library(dplyr)
input_file_path <-
"data/01_geneLists/07_diseaseGwasResults/genesToRemove/"
original_genes_input_file_path <-
"data/01_geneLists/01_knownDiseaseRelatedGenes/combinedGeneList.csv"
output_file_path <-
"data/01_geneLists/09_geneListsInEntrezIdFormat/diseaseRelatedGenes/"
dir.create(output_file_path,
showWarnings = FALSE,
recursive = TRUE)
input_file_paths <-
c(original_genes_input_file_path,
paste0(input_file_path, list.files(input_file_path)))
ensembl <-
useEnsembl(biomart = "genes", dataset = "hsapiens_gene_ensembl")
for (file_path in input_file_paths) {
disease_related_genes <-
fread(file_path) %>%
as.list() %>%
unname() %>%
unlist()
x <- listAttributes(ensembl)
disease_related_genes <- getBM(
attributes = c('entrezgene_id'),
filters = 'hgnc_symbol',
values = disease_related_genes,
mart = ensembl
) %>%
unique()
fwrite(disease_related_genes,
paste0(output_file_path,
sub('.*\\/', '', file_path)),
row.names = FALSE)
}
library(data.table)
library(biomaRt)
library(dplyr)
input_file_path <-
"data/01_geneLists/07_diseaseGwasResults/genesToRemove/"
original_genes_input_file_path <-
"data/01_geneLists/01_knownDiseaseRelatedGenes/combinedGeneList.csv"
output_file_path <-
"data/01_geneLists/08_geneListsInEntrezIdFormat/diseaseRelatedGenes/"
dir.create(output_file_path,
showWarnings = FALSE,
recursive = TRUE)
input_file_paths <-
c(original_genes_input_file_path,
paste0(input_file_path, list.files(input_file_path)))
ensembl <-
useEnsembl(biomart = "genes", dataset = "hsapiens_gene_ensembl")
for (file_path in input_file_paths) {
disease_related_genes <-
fread(file_path) %>%
as.list() %>%
unname() %>%
unlist()
x <- listAttributes(ensembl)
disease_related_genes <- getBM(
attributes = c('entrezgene_id'),
filters = 'hgnc_symbol',
values = disease_related_genes,
mart = ensembl
) %>%
unique()
fwrite(disease_related_genes,
paste0(output_file_path,
sub('.*\\/', '', file_path)),
row.names = FALSE)
}
library(data.table)
library(biomaRt)
library(dplyr)
input_file_path <-
"data/01_geneLists/08_geneListsWithKnownDiseaseAssociatedGenesRemoved/"
output_file_path <-
"data/01_geneLists/08_geneListsInEntrezIdFormat/"
directories <- sub('.*\\/', '', list.dirs(input_file_path))
directories <- directories[directories != ""]
ensembl <-
useEnsembl(biomart = "genes", dataset = "hsapiens_gene_ensembl")
for (directory in directories) {
input_directory <- paste0(input_file_path, directory, "/")
output_directory <- paste0(output_file_path, directory, "/")
dir.create(output_directory,
showWarnings = FALSE,
recursive = TRUE)
input_files <- list.files(input_directory)
for (input_file in input_files) {
temp_input_file_path <- paste0(input_directory, input_file)
gene_list <- fread(temp_input_file_path) %>%
as.list() %>%
unname() %>%
unlist()
gene_list <- getBM(
attributes = c('entrezgene_id'),
filters = 'hgnc_symbol',
values = gene_list,
mart = ensembl
) %>%
unique()
fwrite(gene_list,
paste0(output_directory,
input_file),
row.names = FALSE)
}
}
library(data.table)
library(biomaRt)
library(dplyr)
input_file_path <-
"data/01_geneLists/05_geneEnrichmentTermGenes/"
output_file_path <-
"data/01_geneLists/08_geneListsInEntrezIdFormat/"
directories <- sub('.*\\/', '', list.dirs(input_file_path))
directories <- directories[directories != ""]
ensembl <-
useEnsembl(biomart = "genes", dataset = "hsapiens_gene_ensembl")
for (directory in directories) {
input_directory <- paste0(input_file_path, directory, "/")
output_directory <- paste0(output_file_path, directory, "/")
dir.create(output_directory,
showWarnings = FALSE,
recursive = TRUE)
input_files <- list.files(input_directory)
for (input_file in input_files) {
temp_input_file_path <- paste0(input_directory, input_file)
gene_list <- fread(temp_input_file_path) %>%
as.list() %>%
unname() %>%
unlist()
gene_list <- getBM(
attributes = c('entrezgene_id'),
filters = 'hgnc_symbol',
values = gene_list,
mart = ensembl
) %>%
unique()
fwrite(gene_list,
paste0(output_directory,
input_file),
row.names = FALSE)
}
}
dglinker_genes_input_file_path <-
"data/01_geneLists/06_dglinker_results/allPublicationDataBases/model_results/"
dglinker_file_name <- list.files(dglinker_genes_input_file_path,
pattern = "results")
dglinker_file_path <- paste0(dglinker_genes_input_file_path,
dglinker_file_name)
dglinker_data <- fread(dglinker_file_path) %>%
as.data.frame() %>%
filter(`Association type` != "Not-associated") %>%
dplyr::select(`Gene name`) %>% as.list() %>% unname() %>% unlist()
dglinker_data
output_file_path
output_directory <- paste0(output_file_path, "dglinker/")
dir.create(output_directory,
showWarnings = FALSE,
recursive = TRUE)
library(data.table)
library(biomaRt)
library(dplyr)
input_file_path <-
"data/01_geneLists/05_geneEnrichmentTermGenes/"
output_file_path <-
"data/01_geneLists/08_geneListsInEntrezIdFormat/"
directories <- sub('.*\\/', '', list.dirs(input_file_path))
directories <- directories[directories != ""]
ensembl <-
useEnsembl(biomart = "genes", dataset = "hsapiens_gene_ensembl")
for (directory in directories) {
input_directory <- paste0(input_file_path, directory, "/")
output_directory <- paste0(output_file_path, directory, "/")
dir.create(output_directory,
showWarnings = FALSE,
recursive = TRUE)
input_files <- list.files(input_directory)
for (input_file in input_files) {
temp_input_file_path <- paste0(input_directory, input_file)
gene_list <- fread(temp_input_file_path) %>%
as.list() %>%
unname() %>%
unlist()
gene_list <- getBM(
attributes = c('entrezgene_id'),
filters = 'hgnc_symbol',
values = gene_list,
mart = ensembl
) %>%
unique()
fwrite(gene_list,
paste0(output_directory,
input_file),
row.names = FALSE)
}
}
dglinker_genes_input_file_path <-
"data/01_geneLists/06_dglinker_results/allPublicationDataBases/model_results/"
dglinker_file_name <- list.files(dglinker_genes_input_file_path,
pattern = "results")
dglinker_file_path <- paste0(dglinker_genes_input_file_path,
dglinker_file_name)
dglinker_data <- fread(dglinker_file_path) %>%
as.data.frame() %>%
filter(`Association type` != "Not-associated") %>%
dplyr::select(`Gene name`) %>% as.list() %>% unname() %>% unlist()
output_directory <- paste0(output_file_path, "dglinker/")
dir.create(output_directory,
showWarnings = FALSE,
recursive = TRUE)
dglinker_data <- getBM(
attributes = c('entrezgene_id'),
filters = 'hgnc_symbol',
values = gene_list,
mart = ensembl
) %>%
unique()
fwrite(dglinker_data,
paste0(output_directory,
input_file),
row.names = FALSE)
gene_list
dglinker_data <- fread(dglinker_file_path) %>%
as.data.frame() %>%
filter(`Association type` != "Not-associated") %>%
dplyr::select(`Gene name`) %>% as.list() %>% unname() %>% unlist()
output_directory <- paste0(output_file_path, "dglinker/")
dir.create(output_directory,
showWarnings = FALSE,
recursive = TRUE)
dglinker_data <- getBM(
attributes = c('entrezgene_id'),
filters = 'hgnc_symbol',
values = dglinker_data,
mart = ensembl
) %>%
unique()
dglinker_data
fwrite(dglinker_data,
paste0(output_directory,
input_file),
row.names = FALSE)
fwrite(dglinker_data,
paste0(output_directory,
input_file),
row.names = FALSE)
library(data.table)
library(dplyr)
library(stringr)
input_file_path <-
"data/01_geneLists/08_geneListsInEntrezIdFormat/"
output_file_path <-
"data/01_geneLists/09_magmaInput/"
dir.create(output_file_path, showWarnings = FALSE)
directories <- sub('.*\\/', '', list.dirs(input_file_path))
directories <- directories[directories != ""]
magma_input <- list()
for (directory in directories) {
input_directory <- paste0(input_file_path, directory, "/")
input_files <- list.files(input_directory)
for (input_file in input_files) {
temp_input_file_path <- paste0(input_directory, input_file)
temp_input_file <- input_file %>%
str_replace_all(" ", "_")
gene_list <- fread(temp_input_file_path) %>%
as.list() %>%
unname() %>%
unlist() %>%
as.list()
gene_list <-
paste(directory, paste(temp_input_file, paste(gene_list, collapse = " ")), sep = "_")
magma_input <- append(gene_list, magma_input)
}
}
magma_input <- as.list(magma_input) %>%
unlist() %>%
as.list()
fwrite(
magma_input,
paste0(output_file_path, "magmaInput.txt"),
sep = "\n",
quote = FALSE
)
input_file
fwrite(dglinker_data,
paste0(output_directory,
"dglinker.csv"),
row.names = FALSE)
library(data.table)
library(dplyr)
library(stringr)
input_file_path <-
"data/01_geneLists/08_geneListsInEntrezIdFormat/"
output_file_path <-
"data/01_geneLists/09_magmaInput/"
dir.create(output_file_path, showWarnings = FALSE)
directories <- sub('.*\\/', '', list.dirs(input_file_path))
directories <- directories[directories != ""]
magma_input <- list()
for (directory in directories) {
input_directory <- paste0(input_file_path, directory, "/")
input_files <- list.files(input_directory)
for (input_file in input_files) {
temp_input_file_path <- paste0(input_directory, input_file)
temp_input_file <- input_file %>%
str_replace_all(" ", "_")
gene_list <- fread(temp_input_file_path) %>%
as.list() %>%
unname() %>%
unlist() %>%
as.list()
gene_list <-
paste(directory, paste(temp_input_file, paste(gene_list, collapse = " ")), sep = "_")
magma_input <- append(gene_list, magma_input)
}
}
magma_input <- as.list(magma_input) %>%
unlist() %>%
as.list()
fwrite(
magma_input,
paste0(output_file_path, "magmaInput.txt"),
sep = "\n",
quote = FALSE
)

listFilters(mart, c("name", "description", "fullDescription"))
chromosome_location <-
data.frame(CHR = disease_associated_genes[, 1],
START = disease_associated_genes[, 2],
END = disease_associated_genes[, 2]) %>%
apply(1, paste, collapse = ":") %>% unique()
cl <- makeCluster(detectCores() - 1, type = "SOCK")
clusterExport(cl, c("mart","getBM"))
chromosome_location
library(data.table)
library(tidyverse)
library(dplyr)
library(R.utils)
library(biomaRt)
library(snow)
disease_associated_genes <-
fread("data/geneLists/06_diseaseGwasResults/GCST90013429_buildGRCh37.tsv") %>%
as.data.frame() %>%
arrange(p_value) %>%
filter(p_value < 0.05) %>%
arrange(chromosome, base_pair_location)
library(data.table)
library(tidyverse)
library(dplyr)
library(R.utils)
library(biomaRt)
library(snow)
disease_associated_genes <-
fread("data/geneLists/06_diseaseGwasResults/GCST90013429_buildGRCh37.tsv") %>%
as.data.frame() %>%
arrange(p_value) %>%
filter(p_value < 0.05) %>%
arrange(chromosome, base_pair_location)
View(disease_associated_genes)
mart <- useEnsembl(biomart = "snps",
dataset = "hsapiens_snp")
attributes <- listAttributes(mart)
filters <-
listFilters(mart, c("name", "description", "fullDescription"))
chromosome_location <-
data.frame(CHR = disease_associated_genes[, 1],
START = disease_associated_genes[, 2],
END = disease_associated_genes[, 2]) %>%
apply(1, paste, collapse = ":") %>% unique()
cl <- makeCluster(detectCores() - 1, type = "SOCK")
library(parallel)
cl <- makeCluster(detectCores() - 1, type = "SOCK")
clusterExport(cl, c("mart","getBM"))
ensemblGeneIds <- clusterApply(cl, coords[1,25], function(i) {
getBM(
attributes = c('ensembl_gene_stable_id'),
filters = c('chromosomal_region'),
values = i,
mart = mart
)
}) %>%
unlist() %>%
unique() %>%
na.omit()
ensemblGeneIds <- clusterApply(cl, chromosome_location[1,25], function(i) {
getBM(
attributes = c('ensembl_gene_stable_id'),
filters = c('chromosomal_region'),
values = i,
mart = mart
)
}) %>%
unlist() %>%
unique() %>%
na.omit()
ensemblGeneIds <- clusterApply(cl, chromosome_location[1:25], function(i) {
getBM(
attributes = c('ensembl_gene_stable_id'),
filters = c('chromosomal_region'),
values = i,
mart = mart
)
}) %>%
unlist() %>%
unique() %>%
na.omit()
ensemblGeneIds
ensemblGeneIds <- clusterApply(cl, chromosome_location[1:25], function(i) {
getBM(
attributes = c('ensembl_gene_stable_id'),
filters = c('chromosomal_region'),
values = i,
mart = mart
)
})
ensemblGeneIds
ensemblGeneIds <- clusterApply(cl, chromosome_location[1:50], function(i) {
getBM(
attributes = c('ensembl_gene_stable_id'),
filters = c('chromosomal_region'),
values = i,
mart = mart
)
}) %>%
unlist() %>%
unique() %>%
na.omit()
ensemblGeneIds
ensemblGeneIds <- clusterApply(cl, chromosome_location[1:100], function(i) {
getBM(
attributes = c('ensembl_gene_stable_id'),
filters = c('chromosomal_region'),
values = i,
mart = mart
)
}) %>%
unlist() %>%
unique() %>%
na.omit()
ensemblGeneIds
ensemblMart <-
useDataset("hsapiens_gene_ensembl", useMart("ensembl"))
geneSymbols <-
getBM(
filters = "ensembl_gene_id",
attributes = c('hgnc_symbol'),
values = ensemblGeneIds,
mart = ensemblMart
) %>%
unlist() %>%
unique() %>%
na.omit()
print(geneSymbols)
ensemblGeneIds <- clusterApply(cl, chromosome_location[1:1000], function(i) {
getBM(
attributes = c('ensembl_gene_stable_id'),
filters = c('chromosomal_region'),
values = i,
mart = mart
)
}) %>%
unlist() %>%
unique() %>%
na.omit()
stopCluster(cl)
library(data.table)
library(tidyverse)
library(dplyr)
library(R.utils)
library(biomaRt)
library(snow)
library(parallel)
disease_associated_genes <-
fread("data/geneLists/06_diseaseGwasResults/GCST90013429_buildGRCh37.tsv") %>%
as.data.frame() %>%
arrange(p_value) %>%
filter(p_value < 0.000009) %>%
arrange(chromosome, base_pair_location)
#####################################
mart <- useEnsembl(biomart = "snps",
dataset = "hsapiens_snp")
attributes <- listAttributes(mart)
filters <-
listFilters(mart, c("name", "description", "fullDescription"))
chromosome_location <-
data.frame(CHR = disease_associated_genes[, 1],
START = disease_associated_genes[, 2],
END = disease_associated_genes[, 2]) %>%
apply(1, paste, collapse = ":") %>% unique()
length(chromosome_location)
cl <- makeCluster(detectCores() - 1, type = "SOCK")
clusterExport(cl, c("mart","getBM"))
ensemblGeneIds <- clusterApply(cl, chromosome_location, function(i) {
getBM(
attributes = c('ensembl_gene_stable_id'),
filters = c('chromosomal_region'),
values = i,
mart = mart
)
}) %>%
unlist() %>%
unique() %>%
na.omit()
ensemblGeneIds
library(data.table)
library(tidyverse)
library(dplyr)
library(stringr)
library(readxl)
library(biomaRt)
library(ggvenn)
ensembl <-
useEnsembl(biomart = "genes", dataset = "hsapiens_gene_ensembl")
stopCluster(cl)
library(data.table)
library(tidyverse)
library(dplyr)
library(biomaRt)
ensembl <-
useEnsembl(biomart = "genes", dataset = "hsapiens_gene_ensembl")
disease_associated_genes <-
fread(
"data/geneLists/06_diseaseGwasResults/gwasCatalogue/MONDO_0004976_associations_export_als.tsv"
) %>%
as.data.frame() %>%
dplyr::select(mappedGenes) %>%
unique() %>%
na.omit() %>%
as.list() %>%
unname() %>%
unlist() %>%
str_split(",") %>%
unlist() %>%
str_split(";") %>%
unlist() %>%
unique()
disease_associated_genes2 <-
fread(
"data/geneLists/06_diseaseGwasResults/gwasCatalogue/gwas-association-downloaded_2023-08-02-EFO_0001357_sporadic.tsv"
) %>%
as.data.frame() %>%
dplyr::select("REPORTED GENE(S)") %>%
unique() %>%
na.omit() %>%
as.list() %>%
unname() %>%
unlist() %>%
str_split(",") %>%
unlist() %>%
str_split(";") %>%
unlist() %>%
unique()
disease_associated_genes <-
append(disease_associated_genes, disease_associated_genes2) %>% unique()
disease_associated_genes <- getBM(
attributes = c('hgnc_symbol'),
filters = 'hgnc_symbol',
values = disease_associated_genes,
mart = ensembl
) %>%
as.list() %>%
unlist() %>%
unique()
disease_associated_genes
dir.create(disease_associated_genes, "data/geneLists/06_diseaseGwasResults/genesToRemove/")
dir.create("data/geneLists/06_diseaseGwasResults/genesToRemove/",
showWarnings = FALSE)
write.csv(disease_associated_genes, "data/geneLists/06_diseaseGwasResults/genesToRemove/gwasGenes.csv")
write.csv(disease_associated_genes, "data/geneLists/06_diseaseGwasResults/genesToRemove/gwasGenes.csv", row.names = FALSE)
write.csv(disease_associated_genes, "data/geneLists/06_diseaseGwasResults/genesToRemove/gwasCatalogueGenes.csv", row.names = FALSE)
3.1*10^-8
disease_associated_genes <-
fread(
"data/geneLists/06_diseaseGwasResults/gwasCatalogue/MONDO_0004976_associations_export_als.tsv"
) %>%
as.data.frame()
colnames(disease_associated_genes)
disease_associated_genes2 <-
fread(
"data/geneLists/06_diseaseGwasResults/gwasCatalogue/gwas-association-downloaded_2023-08-02-EFO_0001357_sporadic.tsv"
) %>%
as.data.frame()
colnames(disease_associated_genes2)
View(disease_associated_genes2)
disease_associated_genes2 <-
fread(
"data/geneLists/06_diseaseGwasResults/gwasCatalogue/gwas-association-downloaded_2023-08-02-EFO_0001357_sporadic.tsv"
) %>%
as.data.frame() %>%
filter("P-VALUE" < 5*10^-8)
disease_associated_genes2 <-
fread(
"data/geneLists/06_diseaseGwasResults/gwasCatalogue/gwas-association-downloaded_2023-08-02-EFO_0001357_sporadic.tsv"
) %>%
as.data.frame() %>%
filter(!!"P-VALUE" < 5*10^-8)
library(data.table)
library(tidyverse)
library(dplyr)
library(biomaRt)
ensembl <-
useEnsembl(biomart = "genes", dataset = "hsapiens_gene_ensembl")
disease_associated_genes <-
fread(
"data/geneLists/06_diseaseGwasResults/gwasCatalogue/MONDO_0004976_associations_export_als.tsv"
) %>%
as.data.frame() %>%
filter(pValue < 5 * 10 ^ -8) %>%
dplyr::select(mappedGenes) %>%
unique() %>%
na.omit() %>%
as.list() %>%
unname() %>%
unlist() %>%
str_split(",") %>%
unlist() %>%
str_split(";") %>%
unlist() %>%
unique() %>%
trimws()
disease_associated_genes2 <-
fread(
"data/geneLists/06_diseaseGwasResults/gwasCatalogue/gwas-association-downloaded_2023-08-02-EFO_0001357_sporadic.tsv"
) %>%
as.data.frame() %>%
filter(`P-VALUE` < 5 * 10 ^ -8) %>%
dplyr::select("REPORTED GENE(S)") %>%
unique() %>%
na.omit() %>%
as.list() %>%
unname() %>%
unlist() %>%
str_split(",") %>%
unlist() %>%
str_split(";") %>%
unlist() %>%
unique() %>%
trimws()
disease_associated_genes <-
append(disease_associated_genes, disease_associated_genes2) %>% unique()
disease_associated_genes <- getBM(
attributes = c('hgnc_symbol'),
filters = 'hgnc_symbol',
values = disease_associated_genes,
mart = ensembl
) %>%
as.list() %>%
unlist() %>%
unique()
length(disease_associated_genes)
dir.create("data/geneLists/06_diseaseGwasResults/genesToRemove/",
showWarnings = FALSE)
write.csv(
disease_associated_genes,
"data/geneLists/06_diseaseGwasResults/genesToRemove/gwasCatalogueGenes.csv",
row.names = FALSE
)
library(data.table)
library(tidyverse)
library(dplyr)
library(biomaRt)
ensembl <-
useEnsembl(biomart = "genes", dataset = "hsapiens_gene_ensembl")
disease_associated_genes <-
fread(
"data/geneLists/06_diseaseGwasResults/gwasCatalogue/MONDO_0004976_associations_export_als.tsv"
) %>%
as.data.frame() %>%
# filter(pValue < 5 * 10 ^ -8) %>%
dplyr::select(mappedGenes) %>%
unique() %>%
na.omit() %>%
as.list() %>%
unname() %>%
unlist() %>%
str_split(",") %>%
unlist() %>%
str_split(";") %>%
unlist() %>%
unique() %>%
trimws()
disease_associated_genes2 <-
fread(
"data/geneLists/06_diseaseGwasResults/gwasCatalogue/gwas-association-downloaded_2023-08-02-EFO_0001357_sporadic.tsv"
) %>%
as.data.frame() %>%
# filter(`P-VALUE` < 5 * 10 ^ -8) %>%
dplyr::select("REPORTED GENE(S)") %>%
unique() %>%
na.omit() %>%
as.list() %>%
unname() %>%
unlist() %>%
str_split(",") %>%
unlist() %>%
str_split(";") %>%
unlist() %>%
unique() %>%
trimws()
disease_associated_genes <-
append(disease_associated_genes, disease_associated_genes2) %>% unique()
disease_associated_genes <- getBM(
attributes = c('hgnc_symbol'),
filters = 'hgnc_symbol',
values = disease_associated_genes,
mart = ensembl
) %>%
as.list() %>%
unlist() %>%
unique()
length(disease_associated_genes)
dir.create("data/geneLists/06_diseaseGwasResults/genesToRemove/",
showWarnings = FALSE)
write.csv(
disease_associated_genes,
"data/geneLists/06_diseaseGwasResults/genesToRemove/gwasCatalogueGenes.csv",
row.names = FALSE
)
length(disease_associated_genes2)
disease_associated_genes <-
fread(
"data/geneLists/06_diseaseGwasResults/gwasCatalogue/MONDO_0004976_associations_export_als.tsv"
) %>%
as.data.frame() %>%
# filter(pValue < 5 * 10 ^ -8) %>%
dplyr::select(mappedGenes) %>%
unique() %>%
na.omit() %>%
as.list() %>%
unname() %>%
unlist() %>%
str_split(",") %>%
unlist() %>%
str_split(";") %>%
unlist() %>%
unique() %>%
trimws()
length(disease_associated_genes)
library(data.table)
library(tidyverse)
library(dplyr)
library(R.utils)
library(biomaRt)
library(snow)
library(parallel)
disease_associated_genes <-
fread(
"data/geneLists/06_diseaseGwasResults/summaryStats/GCST90013429_buildGRCh37.tsv"
) %>%
as.data.frame() %>%
arrange(p_value) %>%
filter(p_value < 0.000009) %>%
arrange(chromosome, base_pair_location)
#####################################
mart <- useEnsembl(biomart = "snps",
dataset = "hsapiens_snp")
attributes <- listAttributes(mart)
filters <-
listFilters(mart, c("name", "description", "fullDescription"))
chromosome_location <-
data.frame(CHR = disease_associated_genes[, 1],
START = disease_associated_genes[, 2],
END = disease_associated_genes[, 2]) %>%
apply(1, paste, collapse = ":") %>% unique()
cl <- makeCluster(detectCores() - 1, type = "SOCK")
clusterExport(cl, c("mart", "getBM"))
ensemblGeneIds <-
clusterApply(cl, chromosome_location, function(i) {
try({
getBM(
attributes = c('ensembl_gene_stable_id'),
filters = c('chromosomal_region'),
values = i,
mart = mart
)
})
}) %>%
unlist() %>%
unique() %>%
na.omit()
stopCluster(cl)
ensemblMart <-
useDataset("hsapiens_gene_ensembl", useMart("ensembl"))
geneSymbols <-
getBM(
filters = "ensembl_gene_id",
attributes = c('hgnc_symbol'),
values = ensemblGeneIds,
mart = ensemblMart
) %>%
unlist() %>%
unique() %>%
na.omit()
print(geneSymbols)
library(data.table)
library(tidyverse)
library(dplyr)
library(R.utils)
library(biomaRt)
library(snow)
library(parallel)
disease_associated_genes <-
fread(
"data/geneLists/06_diseaseGwasResults/summaryStats/GCST90013429_buildGRCh37.tsv"
) %>%
as.data.frame() %>%
arrange(p_value) %>%
filter(p_value < 0.05) %>%
arrange(chromosome, base_pair_location)
#####################################
mart <- useEnsembl(biomart = "snps",
dataset = "hsapiens_snp")
attributes <- listAttributes(mart)
filters <-
listFilters(mart, c("name", "description", "fullDescription"))
chromosome_location <-
data.frame(CHR = disease_associated_genes[, 1],
START = disease_associated_genes[, 2],
END = disease_associated_genes[, 2]) %>%
apply(1, paste, collapse = ":") %>% unique()
cl <- makeCluster(detectCores() - 1, type = "SOCK")
clusterExport(cl, c("mart", "getBM"))
ensemblGeneIds <-
clusterApply(cl, chromosome_location, function(i) {
try({
getBM(
attributes = c('ensembl_gene_stable_id'),
filters = c('chromosomal_region'),
values = i,
mart = mart
)
})
}) %>%
unlist() %>%
unique() %>%
na.omit()
stopCluster(cl)

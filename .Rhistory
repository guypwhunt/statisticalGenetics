!FULL_NAME %in% c(
"diseaseRelatedGenes_gwasCatalogueGenes.csv",
"diseaseRelatedGenes_gwasCataloguePlusOrginalGenes.csv",
"diseaseRelatedGenes_combinedGeneList.csv"
)
)
fileName <- fileNames[1]
gene_set_results <-
paste0(directory, fileName, ".gsa.out") %>%
fread(skip = 4,
fill = TRUE) %>%
arrange(P) %>%
filter(
!FULL_NAME %in% c(
"diseaseRelatedGenes_gwasCatalogueGenes.csv",
"diseaseRelatedGenes_gwasCataloguePlusOrginalGenes.csv",
"diseaseRelatedGenes_combinedGeneList.csv"
)
)
directories
library(data.table)
library(dplyr)
input_file_path <-
"data/02_magma/08_geneSetAnalysis"
output_file_path <-
"data/02_magma/09_pValueAdjustedGeneSetAnalysis/"
fileNames <- c(0, 1, 2.5, 5, 7.5, 10)
directories <- list.dirs(input_file_path)[2:4]
directory <- directories[1]
gene_set_results <-
paste0(directory, fileName, ".gsa.out") %>%
fread(skip = 4,
fill = TRUE) %>%
arrange(P) %>%
filter(
!FULL_NAME %in% c(
"diseaseRelatedGenes_gwasCatalogueGenes.csv",
"diseaseRelatedGenes_gwasCataloguePlusOrginalGenes.csv",
"diseaseRelatedGenes_combinedGeneList.csv"
)
)
library(data.table)
library(dplyr)
input_file_path <-
"data/02_magma/08_geneSetAnalysis"
output_file_path <-
"data/02_magma/09_pValueAdjustedGeneSetAnalysis/"
fileNames <- c(0, 1, 2.5, 5, 7.5, 10)
directories <- list.dirs(input_file_path)[2:4] %>%
paste0("/")
directory <- directories[1]
gene_set_results <-
paste0(directory, fileName, ".gsa.out") %>%
fread(skip = 4,
fill = TRUE) %>%
arrange(P) %>%
filter(
!FULL_NAME %in% c(
"diseaseRelatedGenes_gwasCatalogueGenes.csv",
"diseaseRelatedGenes_gwasCataloguePlusOrginalGenes.csv",
"diseaseRelatedGenes_combinedGeneList.csv"
)
)
gene_set_results$Adjust_P <-
p.adjust(gene_set_results$P,
method = "BH")
directory <- sub('.*\\/', '', directory)
directory
library(data.table)
library(dplyr)
input_file_path <-
"data/02_magma/08_geneSetAnalysis"
output_file_path <-
"data/02_magma/09_pValueAdjustedGeneSetAnalysis/"
fileNames <- c(0, 1, 2.5, 5, 7.5, 10)
directories <- list.dirs(input_file_path)[2:4]
library(data.table)
library(dplyr)
input_file_path <-
"data/02_magma/08_geneSetAnalysis"
output_file_path <-
"data/02_magma/09_pValueAdjustedGeneSetAnalysis/"
fileNames <- c(0, 1, 2.5, 5, 7.5, 10)
fileName <- fileNames[1]
directories <- list.dirs(input_file_path)[2:4]
directory <- directories[1]
directoryName <- sub('.*\\/', '', directory)
gene_set_results <-
paste0(directory, "/", fileName, ".gsa.out") %>%
fread(skip = 4,
fill = TRUE) %>%
arrange(P) %>%
filter(
!FULL_NAME %in% c(
"diseaseRelatedGenes_gwasCatalogueGenes.csv",
"diseaseRelatedGenes_gwasCataloguePlusOrginalGenes.csv",
"diseaseRelatedGenes_combinedGeneList.csv"
)
)
gene_set_results$Adjust_P <-
p.adjust(gene_set_results$P,
method = "BH")
directoryName
paste0(output_file_path, directoryName)
directoryName <- sub('.*\\/', '', directory) %>%
paste0("/")
gene_set_results <-
paste0(directory, "/", fileName, ".gsa.out") %>%
fread(skip = 4,
fill = TRUE) %>%
arrange(P) %>%
filter(
!FULL_NAME %in% c(
"diseaseRelatedGenes_gwasCatalogueGenes.csv",
"diseaseRelatedGenes_gwasCataloguePlusOrginalGenes.csv",
"diseaseRelatedGenes_combinedGeneList.csv"
)
)
gene_set_results$Adjust_P <-
p.adjust(gene_set_results$P,
method = "BH")
paste0(output_file_path, directoryName) %>%
dir.create(showWarnings = FALSE,
recursive = TRUE)
full_output_file_path <-
paste0(output_file_path, sub('.*\\/', '', directory), "/")
full_output_file_path
fwrite(gene_set_results,
paste0(full_output_file_path, fileName, ".gsa.out"))
library(data.table)
library(dplyr)
input_file_path <-
"data/02_magma/08_geneSetAnalysis"
output_file_path <-
"data/02_magma/09_pValueAdjustedGeneSetAnalysis/"
fileNames <- c(0, 1, 2.5, 5, 7.5, 10)
fileName <- fileNames[1]
directories <- list.dirs(input_file_path)[2:4]
directory <- directories[1]
for (directory in directories) {
for (fileName in fileNames) {
gene_set_results <-
paste0(directory, "/", fileName, ".gsa.out") %>%
fread(skip = 4,
fill = TRUE) %>%
arrange(P) %>%
filter(
!FULL_NAME %in% c(
"diseaseRelatedGenes_gwasCatalogueGenes.csv",
"diseaseRelatedGenes_gwasCataloguePlusOrginalGenes.csv",
"diseaseRelatedGenes_combinedGeneList.csv"
)
)
gene_set_results$Adjust_P <-
p.adjust(gene_set_results$P,
method = "BH")
full_output_file_path <-
paste0(output_file_path, sub('.*\\/', '', directory), "/")
dir.create(full_output_file_path,
showWarnings = FALSE,
recursive = TRUE)
fwrite(gene_set_results,
paste0(full_output_file_path, fileName, ".csv"))
}
}
library(data.table)
library(dplyr)
library(stringr)
input_file_path <-
"data/01_geneLists/09_geneListsInEntrezIdFormat/"
output_file_path <-
"data/01_geneLists/10_magmaInput/"
dir.create(output_file_path, showWarnings = FALSE)
directories <- sub('.*\\/', '', list.dirs(input_file_path))
directories <- directories[directories != ""]
magma_input <- list()
for (directory in directories) {
input_directory <- paste0(input_file_path, directory, "/")
input_files <- list.files(input_directory)
for (input_file in input_files) {
temp_input_file_path <- paste0(input_directory, input_file)
temp_input_file <- input_file %>%
str_replace_all(" ", "_")
gene_list <- fread(temp_input_file_path) %>%
as.list() %>%
unname() %>%
unlist() %>%
as.list()
gene_list <-
paste(directory, paste(temp_input_file, paste(gene_list, collapse = " ")), sep = "_")
magma_input <- append(gene_list, magma_input)
}
}
magma_input <- as.list(magma_input) %>%
unlist() %>%
as.list()
fwrite(
magma_input,
paste0(output_file_path, "magmaInput.txt"),
sep = "\n",
quote = FALSE
)
gene_set_results
library(data.table)
library(dplyr)
input_file_path <-
"data/02_magma/08_geneSetAnalysis"
output_file_path <-
"data/02_magma/09_pValueAdjustedGeneSetAnalysis/"
fileNames <- c(0, 1, 2.5, 5, 7.5, 10)
fileName <- fileNames[1]
directories <- list.dirs(input_file_path)[2:4]
directory <- directories[1]
for (directory in directories) {
for (fileName in fileNames) {
gene_set_results <-
paste0(directory, "/", fileName, ".gsa.out") %>%
fread(skip = 4,
fill = TRUE) %>%
arrange(P) %>%
filter(
!FULL_NAME %in% c(
"diseaseRelatedGenes_gwasCatalogueGenes.csv",
"diseaseRelatedGenes_gwasCataloguePlusOrginalGenes.csv",
"diseaseRelatedGenes_combinedGeneList.csv"
)
) %>%
relocate(FULL_NAME) %>%
dplyr::select(!VARIABLE)
gene_set_results$Adjust_P <-
p.adjust(gene_set_results$P,
method = "BH")
full_output_file_path <-
paste0(output_file_path, sub('.*\\/', '', directory), "/")
dir.create(full_output_file_path,
showWarnings = FALSE,
recursive = TRUE)
fwrite(gene_set_results,
paste0(full_output_file_path, fileName, ".csv"))
}
}
library(data.table)
library(dplyr)
input_file_path <-
"data/02_magma/08_geneSetAnalysis"
output_file_path <-
"data/02_magma/09_pValueAdjustedGeneSetAnalysis/"
fileNames <- c(0, 1, 2.5, 5, 7.5, 10)
fileName <- fileNames[1]
directories <- list.dirs(input_file_path)[2:4]
directory <- directories[1]
for (directory in directories) {
for (fileName in fileNames) {
gene_set_results <-
paste0(directory, "/", fileName, ".gsa.out") %>%
fread(skip = 4,
fill = TRUE) %>%
arrange(P) %>%
filter(
!FULL_NAME %in% c(
"diseaseRelatedGenes_gwasCatalogueGenes.csv",
"diseaseRelatedGenes_gwasCataloguePlusOrginalGenes.csv",
"diseaseRelatedGenes_combinedGeneList.csv"
)
) %>%
relocate(FULL_NAME) %>%
dplyr::select(!VARIABLE)
gene_set_results$Adjust_P <-
p.adjust(gene_set_results$P,
method = "BH")
full_output_file_path <-
paste0(output_file_path, sub('.*\\/', '', directory), "/")
dir.create(full_output_file_path,
showWarnings = FALSE,
recursive = TRUE)
fwrite(gene_set_results,
paste0(full_output_file_path, fileName, ".csv"))
}
}
library(data.table)
library(dplyr)
input_file_path <-
"data/02_magma/08_geneSetAnalysis"
output_file_path <-
"data/02_magma/09_pValueAdjustedGeneSetAnalysis/"
fileNames <- c(0, 1, 2.5, 5, 7.5, 10)
fileName <- fileNames[1]
directories <- list.dirs(input_file_path)[2:4]
directory <- directories[1]
for (directory in directories) {
for (fileName in fileNames) {
gene_set_results <-
paste0(directory, "/", fileName, ".gsa.out") %>%
fread(skip = 4,
fill = TRUE) %>%
arrange(P) %>%
filter(
!FULL_NAME %in% c(
"diseaseRelatedGenes_gwasCatalogueGenes.csv",
"diseaseRelatedGenes_gwasCataloguePlusOrginalGenes.csv",
"diseaseRelatedGenes_combinedGeneList.csv"
)
) %>%
relocate(FULL_NAME) %>%
dplyr::select(!VARIABLE)
gene_set_results$Adjust_P <-
p.adjust(gene_set_results$P,
method = "BH")
full_output_file_path <-
paste0(output_file_path, sub('.*\\/', '', directory), "/")
dir.create(full_output_file_path,
showWarnings = FALSE,
recursive = TRUE)
fwrite(gene_set_results,
paste0(full_output_file_path, fileName, ".csv"))
}
}
# Load required packages
library(dplyr)
library(ggplot2)
# Read CSV as a data frame
data <- read.csv("data/02_magma/09_pValueAdjustedGeneSetAnalysis/allGwasAssociatedGenesRemoved/0.csv")
# Filter data based on P values and create Log_Adjust_P column
filtered_data <- data %>%
filter(P < 0.01) %>%
mutate(Log_Adjust_P = log10(Adjust_P))
# Create a ggplot
ggplot(filtered_data, aes(x = FULL_NAME, y = Log_Adjust_P, size = NGENES)) +
geom_point() +
labs(x = "FULL_NAME", y = "Log Adjusted P", size = "Number of Genes") +
theme_minimal()
# Load required packages
library(dplyr)
library(ggplot2)
# Read CSV as a data frame
data <- read.csv("your_file.csv")
# Load required packages
library(dplyr)
library(ggplot2)
# Read CSV as a data frame
data <- read.csv("your_file.csv")
# Load required packages
library(dplyr)
library(ggplot2)
# Read CSV as a data frame
data <- read.csv("data/02_magma/09_pValueAdjustedGeneSetAnalysis/allGwasAssociatedGenesRemoved/0.csv")
# Filter data based on P values and create Log_Adjust_P column
filtered_data <- data %>%
filter(P < 0.01) %>%
mutate(Log_Adjust_P = log10(Adjust_P))
ggplot(filtered_data, aes(x = FULL_NAME, y = Log_Adjust_P, size = NGENES)) +
geom_point() +
labs(x = "FULL_NAME", y = "Log Adjusted P", size = "Number of Genes") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Load required packages
library(dplyr)
library(ggplot2)
# Read CSV as a data frame
data <- read.csv("data/02_magma/09_pValueAdjustedGeneSetAnalysis/allGwasAssociatedGenesRemoved/0.csv")
# Filter data based on P values and create Log_Adjust_P column
filtered_data <- data %>%
filter(P < 0.01) %>%
mutate(Log_Adjust_P = 0 - log10(Adjust_P))
ggplot(filtered_data, aes(x = FULL_NAME, y = Log_Adjust_P, size = NGENES)) +
geom_point() +
labs(x = "FULL_NAME", y = "Log Adjusted P", size = "Number of Genes") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Load required packages
library(dplyr)
library(ggplot2)
# Read CSV as a data frame
data <- read.csv("data/02_magma/09_pValueAdjustedGeneSetAnalysis/allGwasAssociatedGenesRemoved/0.csv")
# Filter data based on P values and create Log_Adjust_P column
filtered_data <- data %>%
filter(P < 0.1) %>%
mutate(Log_Adjust_P = 0 - log10(Adjust_P))
ggplot(filtered_data, aes(x = FULL_NAME, y = Log_Adjust_P, size = NGENES)) +
geom_point() +
labs(x = "FULL_NAME", y = "Log Adjusted P", size = "Number of Genes") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Load required packages
library(dplyr)
library(ggplot2)
# Read CSV as a data frame
data <- read.csv("data/02_magma/09_pValueAdjustedGeneSetAnalysis/allGwasAssociatedGenesRemoved/0.csv")
# Filter data based on P values and create Log_Adjust_P column
filtered_data <- data %>%
filter(P < 0.1) %>%
mutate(Log_Adjust_P = 0 - log10(Adjust_P))
ggplot(filtered_data, aes(x = FULL_NAME, y = Log_Adjust_P, size = NGENES, color = BETA)) +
geom_point() +
labs(x = "FULL_NAME", y = "Log Adjusted P", size = "Number of Genes") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Load required packages
library(dplyr)
library(ggplot2)
# Read CSV as a data frame
data <- read.csv("data/02_magma/09_pValueAdjustedGeneSetAnalysis/allGwasAssociatedGenesRemoved/0.csv")
# Filter data based on P values and create Log_Adjust_P column
filtered_data <- data %>%
filter(P < 0.1) %>%
mutate(Log_Adjust_P = 0 - log10(Adjust_P))
ggplot(filtered_data, aes(x = reorder(FULL_NAME, Log_Adjust_P), y = Log_Adjust_P, size = NGENES)) +
geom_point() +
labs(x = "FULL_NAME", y = "Log Adjusted P", size = "Number of Genes") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Load required packages
library(dplyr)
library(ggplot2)
# Read CSV as a data frame
data <- read.csv("data/02_magma/09_pValueAdjustedGeneSetAnalysis/allGwasAssociatedGenesRemoved/0.csv")
# Filter data based on P values and create Log_Adjust_P column
filtered_data <- data %>%
filter(P < 0.1) %>%
mutate(Log_Adjust_P = 0 - log10(Adjust_P))
ggplot(filtered_data, aes(x = reorder(FULL_NAME, -Log_Adjust_P), y = Log_Adjust_P, size = NGENES)) +
geom_point() +
labs(x = "FULL_NAME", y = "Log Adjusted P", size = "Number of Genes") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Load required packages
library(dplyr)
library(ggplot2)
# Read CSV as a data frame
data <- read.csv("data/02_magma/09_pValueAdjustedGeneSetAnalysis/allGwasAssociatedGenesRemoved/0.csv")
# Filter data based on P values and create Log_Adjust_P column
filtered_data <- data %>%
filter(P < 0.1) %>%
mutate(Log_Adjust_P = 0 - log10(Adjust_P))
ggplot(filtered_data, aes(x = reorder(FULL_NAME, -Log_Adjust_P), y = Log_Adjust_P, size = NGENES)) +
geom_point() +
labs(x = "FULL_NAME", y = "Log Adjusted P", size = "Number of Genes") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept = -log10(0.05), linetype = "dotted", color = "black")
# Load required packages
library(dplyr)
library(ggplot2)
# Read CSV as a data frame
data <- read.csv("data/02_magma/09_pValueAdjustedGeneSetAnalysis/allGwasAssociatedGenesRemoved/0.csv")
# Filter data based on P values and create Log_Adjust_P column
filtered_data <- data %>%
filter(P < 0.1) %>%
mutate(Log_Adjust_P = 0 - log10(Adjust_P))
ggplot(filtered_data, aes(x = reorder(FULL_NAME, -Log_Adjust_P), y = Log_Adjust_P, size = NGENES,  color = BETA)) +
geom_point() +
labs(x = "Gene Set", y = "0-log10(Adjusted P-Value)", size = "Number of Genes") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept = -log10(0.05), linetype = "dotted", color = "black") +
scale_color_manual(values = c("blue", "black", "red"),
breaks = c(0-max(filtered_data$BETA), 0, max(filtered_data$BETA)),
labels = c("Negative", "Zero", "Positive"))
ggplot(filtered_data, aes(x = reorder(FULL_NAME, -Log_Adjust_P), y = Log_Adjust_P, size = NGENES,  color = BETA)) +
geom_point() +
labs(x = "Gene Set", y = "0-log10(Adjusted P-Value)", size = "Number of Genes") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept = -log10(0.05), linetype = "dotted", color = "black") +
scale_color_manual(values = c("blue", "black", "red"),
breaks = c(0-max(filtered_data$BETA), 0, max(filtered_data$BETA)))
ggplot(filtered_data, aes(x = reorder(FULL_NAME, -Log_Adjust_P), y = Log_Adjust_P, size = NGENES,  color = BETA)) +
geom_point() +
labs(x = "Gene Set", y = "0-log10(Adjusted P-Value)", size = "Number of Genes") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept = -log10(0.05), linetype = "dotted", color = "black") +
scale_color_manual(values = c("blue", "black", "red"))
ggplot(filtered_data, aes(x = reorder(FULL_NAME, -Log_Adjust_P), y = Log_Adjust_P, size = NGENES,  color = BETA)) +
geom_point() +
labs(x = "Gene Set", y = "0-log10(Adjusted P-Value)", size = "Number of Genes") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept = -log10(0.05), linetype = "dotted", color = "black") +
scale_colour_continuous(values = c("blue", "black", "red"))
# Load required packages
library(dplyr)
library(ggplot2)
# Read CSV as a data frame
data <- read.csv("data/02_magma/09_pValueAdjustedGeneSetAnalysis/allGwasAssociatedGenesRemoved/0.csv")
# Filter data based on P values and create Log_Adjust_P column
filtered_data <- data %>%
filter(P < 0.1) %>%
mutate(Log_Adjust_P = 0 - log10(Adjust_P))
ggplot(filtered_data, aes(x = reorder(FULL_NAME, -Log_Adjust_P), y = Log_Adjust_P, size = NGENES,  color = BETA)) +
geom_point() +
labs(x = "Gene Set", y = "0-log10(Adjusted P-Value)", size = "Number of Genes") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept = -log10(0.05), linetype = "dotted", color = "black") +
scale_colour_continuous(type = "viridis")
ggplot(filtered_data, aes(x = reorder(FULL_NAME, -Log_Adjust_P), y = Log_Adjust_P, size = NGENES,  color = BETA)) +
geom_point() +
labs(x = "Gene Set", y = "0-log10(Adjusted P-Value)", size = "Number of Genes") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept = -log10(0.05), linetype = "dotted", color = "black") +
scale_colour_continuous(type = "viridis") +
coord_cartesian(xlim = c(0, 1.75))
ggplot(filtered_data, aes(x = reorder(FULL_NAME, -Log_Adjust_P), y = Log_Adjust_P, size = NGENES,  color = BETA)) +
geom_point() +
labs(x = "Gene Set", y = "0-log10(Adjusted P-Value)", size = "Number of Genes") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_hline(yintercept = -log10(0.05), linetype = "dotted", color = "black") +
scale_colour_continuous(type = "viridis") +
coord_cartesian(ylim = c(0, 1.75))
